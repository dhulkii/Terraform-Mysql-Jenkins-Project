name: Deploy to Production

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  SERVER_HOST: ${{ secrets.SERVER_HOST_QC }}
  SERVER_USER: ${{ secrets.SERVER_USER_QC }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_QC }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  PAT_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      - name: Display event type
        run: echo "Triggered by ${{ github.event_name }}"

      - name: Add server public key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST_QC }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Set up SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY_QC }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Build and run on the server
        run: |
          ssh -T -i private_key.pem ${{ secrets.SERVER_USER_QC }}@${{ secrets.SERVER_HOST_QC }} << 'EOF'
            set -e  # Exit if any command fails

            # Move into project
            cd /home/ubuntu/Terraform-Mysql-Jenkins-Project || exit 1

            git pull https://dhulkii:${{ secrets.GH_TOKEN }}@github.com/dhulkii/Terraform-Mysql-Jenkins-Project.git main

            # Install requirements
            #pip install -r requirements.txt

            # Restart servicess
            #sudo systemctl restart main.service
            #sudo systemctl restart worker.service

            # Check service status
            #sudo systemctl status main.service
            #sudo systemctl status worker.service    
          EOF

      - name: Clean up SSH private key
        run: rm -f private_key.pem
        if: always()

      - name: Clean up known_hosts file
        run: rm -f ~/.ssh/known_hosts
        if: always()
